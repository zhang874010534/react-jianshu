{"version":3,"sources":["common/header/store/reducer.js","pages/detail/store/reducer.js","pages/login/store/reducer.js","store/reducer.js","store/index.js","App.js","index.js"],"names":["initialState","fromJS","value","initState","title","content","defaultState","isLogin","combineReducers","headerReducer","state","action","type","set","detailReducer","loginReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","thunk","Home","lazy","Detail","Login","Write","App","props","fallback","exact","path","component","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RAEMA,EAAeC,iBAAO,CAC1BC,MAAO,iBCDLC,EAAYF,iBAAO,CACrBG,MAAO,qJACPC,QAAQ,miBCHNC,EAAeL,iBAAO,CACxBM,SAAS,ICEIC,4BAAgB,CAC7BC,cHAa,WAAmC,IAAlCC,EAAiC,uDAAzBV,EAAcW,EAAW,uCAC/C,OAAQA,EAAOC,MACb,IAAK,OAEH,OAAOF,EAAMG,IAAI,QAAS,iBAC5B,QACE,OAAOH,IGLXI,cFMa,WAAgC,IAA/BJ,EAA8B,uDAAtBP,EAAWQ,EAAW,uCAGxC,OAFIA,EAAOC,KAEJF,GERXK,aDFa,WAAmC,IAAlCL,EAAiC,uDAAzBJ,EAAcK,EAAW,uCAC/C,MAAoB,UAAhBA,EAAOC,MAGS,cAAhBD,EAAOC,KAFFF,EAAMG,IAAI,UAAWF,EAAOT,OAK9BQ,K,QETHM,EAAmBC,OAAOC,sCAAwCC,IAEzDC,EADHC,YAAYC,EAASN,EAAiBO,YAAgBC,O,uBCE5DC,EAAOC,gBAAK,kBAAM,sDAClBC,EAASD,gBAAK,kBAClB,sDAEIE,EAAQF,gBAAK,kBAAM,gCACnBG,EAAQH,gBAAK,kBAAM,sDAyBVI,E,kDAvBb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDrB,MAAQ,GAFI,E,qDAKjB,OACE,kBAAC,IAAD,CAAUU,MAAOA,GACf,kBAAC,IAAD,KAEE,kBAAC,WAAD,CAAUY,SAAU,4CAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWV,IACjC,kBAAC,IAAD,CAAOQ,OAAK,EAACC,KAAK,cAAcC,UAAWR,IAC3C,kBAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,WAAWC,UAAWP,IACxC,kBAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,SAASC,UAAWN,Y,GAflCO,a,MCLlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.2f4b332e.chunk.js","sourcesContent":["import { fromJS } from 'immutable';\r\n// 把对象转换成immutable对象\r\nconst initialState = fromJS({\r\n  value: 'header value'\r\n});\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'demo':\r\n      // .set方法会结合以前的state，返回新的对象\r\n      return state.set('value', 'header change');\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { fromJS } from 'immutable';\r\n\r\nlet initState = fromJS({\r\n  title: ' 心理学家：房间越乱的人，这3种能力越突出，无论男女',\r\n  content: `  <div className={s.img_container}>\r\n  <p>\r\n    有句老话叫：金窝银窝不如自己的狗窝。当我看到有心理学家说房间越乱的人，某种能力越突出时，超级开心。因为平时经常被老妈念叨房间太乱，这下我终于有理由拒绝整理啦！\r\n  </p>\r\n  \r\n</div>`\r\n});\r\n\r\nexport default (state = initState, action) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { fromJS } from 'immutable';\r\nlet defaultState = fromJS({\r\n  isLogin: false\r\n});\r\n\r\nexport default (state = defaultState, action) => {\r\n  if (action.type === 'login') {\r\n    return state.set('isLogin', action.value);\r\n  }\r\n  if (action.type === 'login_out') {\r\n    return state.set('isLogin', action.value);\r\n  }\r\n  return state;\r\n};\r\n","import { combineReducers } from 'redux-immutable';\r\nimport headerReducer from '../common/header/store/reducer';\r\nimport detailReducer from '../pages/detail/store/reducer';\r\nimport loginReducer from '../pages/login/store/reducer';\r\nexport default combineReducers({\r\n  headerReducer,\r\n  detailReducer,\r\n  loginReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport reducer from './reducer';\r\nimport thunk from 'redux-thunk';\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nlet store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\r\nexport default store;\r\n","import React, { Component, Suspense, lazy } from 'react';\n// import Header from './common/header';\nimport store from './store';\nimport { Provider } from 'react-redux';\nimport { Route, Switch, HashRouter } from 'react-router-dom';\n// import Home from './pages/home';\nconst Home = lazy(() => import('./pages/home'));\nconst Detail = lazy(() =>\n  import(/*webpackChunkName:'hello'*/ './pages/detail')\n);\nconst Login = lazy(() => import('./pages/login'));\nconst Write = lazy(() => import('./pages/write'));\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <Provider store={store}>\n        <HashRouter>\n          {/* <Header></Header> */}\n          <Suspense fallback={<div>loading...</div>}>\n            <Switch>\n              <Route exact path=\"/\" component={Home}></Route>\n              <Route exact path=\"/detail/:id\" component={Detail}></Route>\n              <Route exact path=\"/sign_in\" component={Login}></Route>\n              <Route exact path=\"/write\" component={Write}></Route>\n            </Switch>\n          </Suspense>\n        </HashRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\nimport App from './App';\nimport './static/iconfont/iconfont.css';\n\n// console.log(process.env.NODE_ENV);\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}